// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String
  role          Role      @default(USER)
  profileImage  String?   // profile picture (URL to Cloudinary, S3, etc.)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  blogs         Blog[]    @relation("author_blogs")
  projects      Project[]
}

model Blog {
  id            String    @id @default(uuid())
  title         String
  slug          String    @unique
  summary       String
  content       String    // HTML/Markdown
  published     Boolean   @default(false)

  // New: blog images
  thumbnail     String?   // main thumbnail image
  images        String[]  @default([]) // multiple blog images if needed

  author        User?     @relation(fields: [authorId], references: [id], name: "author_blogs")
  authorId      String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Project {
  id            String    @id @default(uuid())
  title         String
  description   String
  liveUrl       String?
  repoUrl       String?
  tags          String[]  @default([])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  owner         User?     @relation(fields: [ownerId], references: [id])
  ownerId       String?
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  level     String?  // Beginner / Intermediate / Advanced
  order     Int?     @default(0)
}

model About {
  id         String   @id @default(uuid())
  fullName   String
  bio        String
  email      String?
  phone      String?
  location   String?
  imageUrl   String?  // Profile / About section image

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
